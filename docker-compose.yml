version: '3.7'
name: finapp

volumes:
  postgres_data:
  rabbitmq_data:

services:

  accounts:
    build: ./accounts
    container_name: finapp_accounts
    restart: on-failure
    ports:
      - 8001:8001
    environment:
      - APP_PORT=8001
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
    depends_on:
      rabbitmq_post_initialize:
        condition: service_completed_successfully

  notifications:
    build: ./notifications
    container_name: finapp_notifications
    restart: on-failure
    environment:
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
      - APP_PORT=8004
    depends_on:
      rabbitmq_post_initialize:
        condition: service_completed_successfully

  datasource:
    build: ./datasource
    container_name: finapp_datasource
    restart: on-failure
    ports:
      - 8002:8002
    environment:
      - DEBUG=1
      - APP_PORT=8002
      - GURU_API_KEY=${GURUFOCUS_API_KEY}
      - ALPH_API_KEY=${ALPHAVANTAGE_API_KEY}
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
    depends_on:
      rabbitmq_post_initialize:
        condition: service_completed_successfully

  router:
    build: ./router
    container_name: finapp_router
    restart: on-failure
    ports:
      - 8003:8003
    environment:
      - APP_PORT=8003
      - KRATOS_URL=http://kratos:4434
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
    depends_on:
      rabbitmq_post_initialize:
        condition: service_completed_successfully

  postgres:
    image: postgres:15
    container_name: finapp_database
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_MULTIPLE_DATABASES=${POSTGRES_DATABASE_NAME},kratos
    ports:
      - 5432:5432
    volumes:
      - ./config/database/:/docker-entrypoint-initdb.d/
      - postgres_data:/var/lib/postgresql/data/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5

  kratos-migrate:
    image: oryd/kratos:v1.0.0
    container_name: finapp_kratos_db_migrate
    environment:
      - DSN=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:5432/kratos?sslmode=disable&max_conns=20&max_idle_conns=4
    volumes:
      - ./config/kratos:/etc/config/kratos
    command: -c /etc/config/kratos/kratos.yml migrate sql -e --yes

  kratos:
    image: oryd/kratos:v1.0.0
    container_name: finapp_kratos
    environment:
      - DSN=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:5432/kratos?sslmode=disable&max_conns=20&max_idle_conns=4
    ports:
      - 4433:4433
      - 4434:4434
    volumes:
      - ./config/kratos:/etc/config/kratos
    command: serve -c /etc/config/kratos/kratos.yml --dev --watch-courier

  oathkeeper:
    image: oryd/oathkeeper:v0.40
    container_name: finapp_api_gateway
    depends_on:
      - kratos
    ports:
      - 8080:4455
      - 4456:4456
    command: serve proxy -c "/etc/config/oathkeeper/oathkeeper.yml"
    environment:
      - LOG_LEVEL=debug
    restart: on-failure
    volumes:
      - ./config/oathkeeper:/etc/config/oathkeeper

  kratos-selfservice-ui-node:
    image: oryd/kratos-selfservice-ui-node:v1.0.0
    container_name: finapp_kratos_ui
    environment:
      - PORT=4455
      - KRATOS_PUBLIC_URL=http://kratos:4433/
      - KRATOS_BROWSER_URL=http://127.0.0.1:4433/
    ports:
      - 4455:4455

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: finapp_rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq/mnesia/
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 5s
      timeout: 5s
      retries: 3

  rabbitmq_post_initialize:
    build: ./config/rabbitmq
    container_name: finapp_rabbitmq_post_initialize
    environment:
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
    depends_on:
      rabbitmq:
        condition: service_healthy