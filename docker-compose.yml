version: '3.7'
name: finapp

volumes:
  postgres_data:
  rabbitmq_data:

services:

  main:
    build: ./
    container_name: finapp_main
    restart: always
    ports:
      - 8003:8003
    env_file:
      - .env
    volumes:
      - ./mock_data/:/demo_data/
    depends_on:
      rabbitmq_post_initialize:
        condition: service_completed_successfully

  # #######################
  # INFRASTRUCTURE
  postgres:
    image: postgres:15
    container_name: finapp_database
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DATABASE_NAME}
    ports:
      - 5432:5432
    volumes:
      - ./config/database/:/docker-entrypoint-initdb.d/
      - postgres_data:/var/lib/postgresql/data/
    # healthcheck:
    #   test: ["CMD-SHELL", "pg_isready", "-U", "${POSTGRES_USER}"]  # "-d", "${POSTGRES_DATABASE_NAME}", 
    #   interval: 5s
    #   timeout: 5s
    #   retries: 5

  kratos:
    image: oryd/kratos:v1.0.0
    container_name: finapp_kratos
    environment:
      - DSN=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DATABASE_NAME}?sslmode=disable&max_conns=20&max_idle_conns=4&search_path=kratos
      - SELFSERVICE_METHODS_OIDC_CONFIG_PROVIDERS_0_CLIENT_ID=${SELFSERVICE_METHODS_OIDC_CONFIG_PROVIDERS_0_CLIENT_ID}
      - SELFSERVICE_METHODS_OIDC_CONFIG_PROVIDERS_0_CLIENT_SECRET=${SELFSERVICE_METHODS_OIDC_CONFIG_PROVIDERS_0_CLIENT_SECRET}
      - COURIER_SMTP_CONNECTION_URI=${COURIER_SMTP_CONNECTION_URI} 
    ports:
      - 4433:4433
      - 4434:4434
    volumes:
      - ./config/kratos:/etc/config/kratos
    command: serve -c /etc/config/kratos/kratos.yml --dev --watch-courier

  oathkeeper:
    image: oryd/oathkeeper:v0.40
    container_name: finapp_api_gateway
    depends_on:
      - kratos
    ports:
      - 8080:4455
      - 4456:4456
    command: serve proxy -c "/etc/config/oathkeeper/oathkeeper.yml"
    environment:
      - LOG_LEVEL=debug
    restart: on-failure
    volumes:
      - ./config/oathkeeper:/etc/config/oathkeeper

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: finapp_rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq/mnesia/
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 5s
      timeout: 5s
      retries: 3

  # #######################
  # INITIALIZETIONS SCRIPTS
  rabbitmq_post_initialize:
    build: ./config/rabbitmq
    container_name: finapp_rabbitmq_post_initialize
    environment:
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
    depends_on:
      rabbitmq:
        condition: service_healthy

  kratos-migrate:
    image: oryd/kratos:v1.0.0
    container_name: finapp_kratos_db_migrate
    environment:
      - DSN=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DATABASE_NAME}?sslmode=disable&max_conns=20&max_idle_conns=4&search_path=kratos
    volumes:
      - ./config/kratos:/etc/config/kratos
    command: -c /etc/config/kratos/kratos.yml migrate sql -e --yes
